#!/bin/sh
# Script is meant for getting Red Hat based systems up and running

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to ask user if they want to install Docker
ask_install_docker() {
    while true; do
        printf "Do you want to install Docker? [y/n]: "
        read -r answer
        case $answer in
            [Yy]* ) return 0;;
            [Nn]* ) return 1;;
            * ) echo "Please answer yes or no.";;
        esac
    done
}

# Enable EPEL Repository
sudo dnf install epel-release -y

# Update system
sudo dnf update -y && sudo dnf upgrade -y

# add aliases to bash and zsh
echo "alias uupdate='sudo dnf update -y && sudo dnf upgrade -y'" >> ~/.bashrc
echo "alias uupdate='sudo dnf update -y && sudo dnf upgrade -y'" >> ~/.zshrc

# Install extra packages needed for system
sudo dnf install -y zsh vim openssh-server htop wireshark tmux python3 zip btop fzf tldr neofetch git util-linux-user nmap traceroute net-tools wireguard-tools

# Ensure openssh-server (sshd) is enabled and running
sudo systemctl enable sshd
sudo systemctl start sshd

# Install Docker if user wants it
if ! command_exists docker && ask_install_docker; then
    echo "Installing Docker..."
    curl -sSL https://get.docker.com/ | sh
    sudo usermod -aG docker "$(whoami)"
    echo "Docker installed. You may need to log out and back in for group changes to take effect."
fi

# Pull Vim settings and apply to both user and root, with backup for existing .vimrc
git clone https://github.com/xkyuz/vimfiles.git ~/vimfiles
mv ~/.vimrc ~/.vimrc.backup 2> /dev/null
cp ~/vimfiles/vimrc ~/.vimrc
mv -v vimfiles/vim ~/.vim
sudo mv /root/.vimrc /root/.vimrc.backup 2> /dev/null
sudo cp ~/vimfiles/vimrc /root/.vimrc
sudo mv -v vimfiles/vim /root/.vim
rm -rf ~/vimfiles

## Download zsh settings
wget https://raw.githubusercontent.com/xkyuz/newlinuxinstaller/master/mela.zsh-theme
wget --output-document zshrc https://raw.githubusercontent.com/xkyuz/newlinuxinstaller/master/.zshrc

# Install Oh My Zsh - run in a subshell to prevent zsh from taking over
(
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    mv mela.zsh-theme ~/.oh-my-zsh/themes/
    # Replace the current .zshrc with the one from the repository
    mv ~/zshrc ~/.zshrc
    LINE="alias uupdate='sudo dnf update -y && sudo dnf upgrade -y'"
    FILE=~/.zshrc
    if ! grep -Fxq "$LINE" "$FILE"; then
        echo "$LINE" >> "$FILE"
    fi
)

# Configure tmux to enable mouse support
echo "set -g mouse on" >> ~/.tmux.conf

# enable zsh as default
chsh -s $(which zsh)

echo "Installation complete! You may need to log out and back in for changes to take effect."
